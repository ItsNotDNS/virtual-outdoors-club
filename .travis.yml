language: node_js
dist: trusty
node_js:
- lts/carbon
addons:
  postgresql: '9.5'
  chrome: stable
  ssh_known_hosts: 199.116.235.142
env:
- DJANGO_VERSION=2.1.2 DB=postgresql DISPLAY=:99.0 CHROME_BIN=/usr/bin/google-chrome
  DJANGO_HOST=http://127.0.0.1:8000/api
install:
  # installs the packages specified in package.json
  - npm install
  # Sets python to use v3.6.3 when
  - pyenv global 3.6.3
  - pip install --upgrade pip
  # installs the packages specified in requirements.txt
  - pip install -r requirements.txt
before_script:
  # Allows us to run chrome in travis
  - sh -e /etc/init.d/xvfb start
  # creates a new database called outdoors_club_db
  - psql -c "CREATE DATABASE outdoors_club_db"
  # runs django migrations and creates worker
  - python src/django/manage.py migrate
  - python src/django/manage.py createworker
script:
  # runs the Django/backend unit tests with a coverage reporter
  - coverage run --source='src/django/api/views/' --omit='src/django/api/views/PayPalView.py' src/django/manage.py test api
  # checks that coverage meets the requirments (>70%, aim for >85%)
  - coverage report --fail-under=70
  # enforces front-end code styling
  - npm run-script lint
  # runs the front-end unit tests and coverage
  - npm test -- --single-run
  - npm run-script build
  # encryption of cybera
  - openssl aes-256-cbc -K $encrypted_de17c20e6bb1_key -iv $encrypted_de17c20e6bb1_iv -in key_outdoors.pem.enc -out ../.ssh/key_outdoors.pem -d
  - eval "$(ssh-agent -s)"
  # encryption of git
  # - openssl aes-256-cbc -K $encrypted_de17c20e6bb1_key -iv $encrypted_de17c20e6bb1_iv -in deploy_rsa.enc -out ../.ssh/deploy_rsa -d
  - chmod 600 /tmp/key_outdoors.pem
  - ssh-add /tmp/key_outdoors.pem
  - scp -r /dist ubuntu@199.116.235.142:/home/ubuntu/virtual-outdoors-club/dist
  - ssh -i /tmp/key_outdoors ubuntu@199.116.235.142
  - source outdoorsclub_env/bin/activate
  - cd virtual-outdoors-club
  - kill $(lsof -ti :4444)
  # - kill $(lsof -ti :8000)
  # - kill $(lsof -ti :8081)
  # - nohup python src/django/manage.py runserver 0.0.0.0:8000 &
  # - python src/django/manage.py process_tasks &

# Below are the requirements to run automation on travis-ci
# travis-ci is unrelaiable, so this doesn't work 100% of the time

# # installs selenium
# - ./node_modules/.bin/selenium-standalone install
# # starts selenium in the background
# - ./node_modules/.bin/selenium-standalone start &
# # builds and runs the dist in the background
# - npm run-script build
# - node server.js &
# # runs the django server in the background
# - python ./src/django/manage.py runserver &
# # runs the webdriver integration tests
# - ./node_modules/.bin/wdio wdio.conf.js